name: CI/CD Pipeline

# Когда запускать пайплайн
on:
  push:
    branches:
      - main  # Запускается при пуше в main
  pull_request:
    branches:
      - main  # Запускается при создании PR в main

# Переменные окружения (опционально)
env:
  PYTHON_VERSION: 3.9

# Задачи (jobs)
jobs:
  build-and-test:
    runs-on: ubuntu-latest  # ОС для выполнения

    steps:
      # 1. Чекаут кода
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Установка Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # 3. Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Запуск тестов (предположим, есть pytest)
      - name: Run tests
        run: |
          pytest tests/ --verbose

  deploy:
    needs: build-and-test  # Выполняется только после успеха build-and-test
    if: github.ref == 'refs/heads/main'  # Только для main ветки
    runs-on: ubuntu-latest

    steps:
      # 1. Чекаут кода
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Деплой на Heroku (пример)
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: my-flask-app
        run: |
          git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:main